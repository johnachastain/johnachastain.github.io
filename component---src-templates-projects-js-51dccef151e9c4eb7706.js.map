{"version":3,"sources":["webpack:///./src/templates/projects.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_findIndex__WEBPACK_IMPORTED_MODULE_1__","lodash_findIndex__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","gatsby_plugin_modal_routing__WEBPACK_IMPORTED_MODULE_5__","Template","_ref","data","_data$markdownRemark","markdownRemark","_data$markdownRemark$","frontmatter","description","title","publicURL","full","id","excerpt","posts","allMarkdownRemark","edges","location","_useState","useState","initialized","setInitialized","_useState2","currentIndex","setCurrentIndex","useEffect","findIndex","_ref2","node","useCallback","length","a","createElement","_ref3","modal","closeTo","to","className","src","alt","gatsby__WEBPACK_IMPORTED_MODULE_1__","HeaderV2","isHome","pathname","state","href","Layout","_ref2$location","children","Date","getFullYear","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-templates-projects-js-51dccef151e9c4eb7706.js","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\nimport findIndex from 'lodash/findIndex';\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { ModalRoutingContext } from 'gatsby-plugin-modal-routing'\n\nconst  Template = ({ data }) => {\n    const {\n      markdownRemark: {\n        frontmatter: {\n          description,\n          title,\n          full: { publicURL }\n        },\n        id,\n        excerpt\n      },\n      allMarkdownRemark: {\n        edges: posts\n      },\n      location\n    } = data;\n\n    const [initialized, setInitialized] = useState(false);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const currentPost = posts[currentIndex];\n\n    useEffect(\n      () => {\n          if (!initialized) {\n            const currentIndex = findIndex(posts, ({node}) => node.id === id);\n            setCurrentIndex(currentIndex);\n            setInitialized(true);\n          }\n      },\n      [\n        setCurrentIndex,\n        initialized,\n        setInitialized,\n        id,\n        posts,\n        findIndex\n      ]\n    );\n\n    const onNext = useCallback(\n      () => {\n        if (currentIndex < posts.length - 1) {\n          setCurrentIndex(currentIndex + 1);\n        }\n      },\n      [ currentIndex, setCurrentIndex, posts ]\n    );\n\n    const onPrev = useCallback(\n      () => {\n      if (currentIndex > 0) {\n        setCurrentIndex(currentIndex - 1);\n      }\n      },\n      [ currentIndex, setCurrentIndex ]\n    );\n\n    return (\n      <ModalRoutingContext>\n        {({ modal, closeTo }) => (\n          <div>\n          {modal ?\n            <div>\n              <Link\n                to={closeTo}\n                className='react-modal-close-btn' />\n\n                <div className='react-modal-content-inner'>\n                  <Link\n                    className='modal-img-link'\n                    to={closeTo}>\n                    <picture>\n                      <img\n                        src={publicURL}\n                        alt={title}\n                        className='modal-responsive-img' />\n                    </picture>\n                  </Link>\n                </div>\n\n            </div> :\n            <Layout {...{ location }}>\n              <SEO\n                title={title}\n                description={description || excerpt}\n              />\n              <img\n                src={publicURL}\n                alt={title}\n                className='responsive-img project-page-img' />\n            </Layout>\n          }\n          </div>\n        )}\n      </ModalRoutingContext>\n    )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query ProjectsBySlug($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        full {\n          publicURL\n        }\n        slug\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [fields___order], order: ASC }\n      filter: { fields: { sourceInstanceName: { eq: \"projects\" } } }\n      ) {\n      edges {\n        node {\n          id\n          fields {\n            order\n          }\n          frontmatter {\n            title\n            full {\n              publicURL\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport './layout.sass'\n\nconst Header = () => {\n  return (\n    <header className='sticky'>\n        <nav className='header-inner'>\n            <ul className='header-left'>\n                <li>\n                    <Link to={`/contact`}>\n                        contact\n                    </Link>\n                </li>\n            </ul>\n            <ul className='social header-center'>\n                <li>\n                    <a href='https://www.artstation.com/johnachastain'>\n                        <img src='/svg/artstation.svg' alt='artstation' />\n                    </a>\n                </li>\n                <li>\n                    <a href='https://www.behance.net/picastudio'>\n                        <img src='/svg/behance.svg' alt='behance' />\n                    </a>\n                </li>\n                <li>\n                    <a href='https://dribbble.com/picastudio'>\n                        <img src='/svg/dribbble.svg' alt='dribbble' />\n                    </a>\n                </li>\n                <li>\n                    <a href='https://www.instagram.com/johnachastain/'>\n                        <img src='/svg/instagram.svg' alt='instagram' />\n                    </a>\n                </li>\n            </ul>\n            <ul className='header-right'>\n                <li>\n                    <Link to={`/about`}>\n                        about\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    </header>\n  )\n}\n\nconst HeaderV2 = ({ location }) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const isHome = location.pathname === rootPath\n    return (\n      <header className='sticky'>\n          <nav className='header-inner'>\n              <ul className='header-left'>\n                    {!isHome ? <li>\n                      <Link\n                        to={rootPath}\n                        className='with-divider'>\n                          home\n                      </Link>\n                  </li> : null}\n                  <li>\n                      <Link\n                      to={`/contact`}\n                      state={{ modal: true }}\n                      className='with-divider'>\n                          contact\n                      </Link>\n                  </li>\n                  <li>\n                      <Link\n                      to={`/about`}\n                      state={{ modal: true }}>\n                          about\n                      </Link>\n                  </li>\n              </ul>\n              <ul className='social header-right'>\n                  <li>\n                      <a href='https://www.artstation.com/johnachastain'>\n                          <img src='/svg/artstation.svg' alt='artstation' />\n                      </a>\n                  </li>\n                  <li>\n                      <a href='https://www.behance.net/picastudio'>\n                          <img src='/svg/behance.svg' alt='behance' />\n                      </a>\n                  </li>\n                  <li>\n                      <a href='https://dribbble.com/picastudio'>\n                          <img src='/svg/dribbble.svg' alt='dribbble' />\n                      </a>\n                  </li>\n                  <li>\n                      <a href='https://www.instagram.com/johnachastain/'>\n                          <img src='/svg/instagram.svg' alt='instagram' />\n                      </a>\n                  </li>\n              </ul>\n          </nav>\n      </header>\n    )\n  }\n\nconst Layout = ({ location = {}, children }) => {\n\n    return (\n      <div>\n        <HeaderV2 {...{ location }} />\n        <div className='letterhead'>\n            <img\n                src='/assets/greenman-desaturated.jpg'\n                className='letterhead-img' alt='' />\n            <hgroup>\n                <h1>\n                    John Andrew Chastain\n                </h1>\n                <h2>\n                    {'{ Art '}\n                    <img\n                        src='/assets/ampersand.svg'\n                        className='ampersand'\n                        alt='ampersand' />\n                    {' Illustration }'}\n                </h2>\n            </hgroup>\n        </div>\n        <main>\n            {children}\n        </main>\n        <footer>\n          {`{ © Copyright ${new Date().getFullYear()}. All Rights Reserved. }`}\n        </footer>\n      </div>\n    )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}